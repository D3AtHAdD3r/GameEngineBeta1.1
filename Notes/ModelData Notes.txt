//Model-Position-Data:
-Datamembers:
current world position
previous world position
current rotaion
previous rotation
current scaling 
previous scaling
world matrix

//position attributes are updated via two ways: 
Direct - replaces old value with new ones
Incremental - Increments or  decrements current attribute by a given value.

//struct from which update function will get updated values
struct-> modelupdatedata:
rotx,roty,rotz = rotation values which will be directly/Incremental applied to model
scalex,scaly,scalez = scaling values which will be directly/Incremental applied to model
translation values = translation values which will be directly/Incremental applied to the model

//after every update call - modelupdatedata::translation values will get reset

-functions:
public:
getter functions for all

// translation is done in relation to current model's x,y,z direction.
upadate(modelupdatedata)

// translation is done in relation to ModelB's x,y,z direction.
upadate(modelupdatedata, worldMatrix-modelB)

// rotation and scaling are Direct updated, translation is incremental updated 
update_default() 
update_default_smooth() // same with smooth movements
update_translation_direct() //translation is directly updated


